{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 370bab33eb8c48e69d4e","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/api/baseUrl.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","_userApi","getUsers","then","res","usersBody","forEach","u","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","value","row","parentNode","removeChild","this","_interopRequireDefault","obj","__esModule","default","get","url","fetch","baseUrl","onSuccess","onError","del","req","Request","method","json","err","console","log","Object","defineProperty","_baseUrl","_baseUrl2","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","map","append","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","set","type","rejected","text","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","e","list","push","values","getAll","has","hasOwnProperty","callback","thisArg","keys","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","getBaseUrl","getQueryStringParameterByName","window","href","regex","RegExp","results","exec"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _userApi = __webpack_require__(2);\n\t\n\t(0, _userApi.getUsers)().then(function (res) {\n\t\n\t  var usersBody = \"\";\n\t  res.forEach(function (u) {\n\t    usersBody += '<tr>\\n      <td>' + u.id + '</td>\\n      <td>' + u.firstName + '</td>\\n      <td>' + u.lastName + '</td>\\n      <td>' + u.email + '</td>\\n      <td><a href=\"#\" data-id=\"' + u.id + '\" class=\"deleteUser btn btn-danger\">Delete</a></td>\\n      </tr>';\n\t  });\n\t\n\t  global.document.getElementById('users').innerHTML = usersBody;\n\t  var deleteLinks = global.document.getElementsByClassName('deleteUser');\n\t\n\t  Array.from(deleteLinks, function (link) {\n\t    link.onclick = function (event) {\n\t      var element = event.target;\n\t      event.preventDefault();\n\t      (0, _userApi.deleteUser)(element.attributes[\"data-id\"].value);\n\t      var row = element.parentNode.parentNode;\n\t      row.parentNode.removeChild(row);\n\t    };\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\t__webpack_require__(3);\n\t\n\tvar _baseUrl = __webpack_require__(4);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\tfunction getUsers() {\n\t  return get('users');\n\t}\n\t\n\tfunction get(url) {\n\t  return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\tfunction deleteUser(id) {\n\t  return del('users/' + id);\n\t}\n\t\n\tfunction del(url) {\n\t  var req = new Request(baseUrl + url, {\n\t    method: 'DELETE'\n\t  });\n\t  return fetch(req).then(onSuccess, onError);\n\t}\n\t\n\tfunction onSuccess(res) {\n\t  return res.json();\n\t}\n\t\n\tfunction onError(err) {\n\t  console.log(err); // eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getBaseUrl;\n\tfunction getBaseUrl() {\n\t  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t  if (!url) url = window.location.href;\n\t  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t      results = regex.exec(url);\n\t  if (!results) return null;\n\t  if (!results[2]) return '';\n\t  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 370bab33eb8c48e69d4e\n **/","import { getUsers, deleteUser } from './api/userApi';\n\ngetUsers().then(res => {\n\n  let usersBody = \"\";\n  res.forEach(u => {\n    usersBody += `<tr>\n      <td>${u.id}</td>\n      <td>${u.firstName}</td>\n      <td>${u.lastName}</td>\n      <td>${u.email}</td>\n      <td><a href=\"#\" data-id=\"${u.id}\" class=\"deleteUser btn btn-danger\">Delete</a></td>\n      </tr>`;\n  });\n\n  global.document.getElementById('users').innerHTML = usersBody;\n  const deleteLinks = global.document.getElementsByClassName('deleteUser');\n\n  Array.from(deleteLinks, link => {\n    link.onclick = function (event) {\n      const element = event.target;\n      event.preventDefault();\n      deleteUser(element.attributes[\"data-id\"].value);\n      const row = element.parentNode.parentNode;\n      row.parentNode.removeChild(row);\n    }\n  });\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import 'whatwg-fetch';\nimport getBaseUrl from './baseUrl';\n\nconst baseUrl = getBaseUrl();\n\nexport function getUsers() {\n  return get('users');\n}\n\nfunction get(url) {\n  return fetch(baseUrl + url).then(onSuccess, onError);\n}\n\nexport function deleteUser(id) {\n  return del(`users/${id}`);\n}\n\nfunction del(url) {\n  const req = new Request(baseUrl + url, {\n    method: 'DELETE'\n  });\n  return fetch(req).then(onSuccess, onError);\n}\n\nfunction onSuccess(res) {\n  return res.json();\n}\n\nfunction onError(err) {\n  console.log(err); // eslint-disable-line no-console\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userApi.js\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 3\n ** module chunks = 0\n **/","export default function getBaseUrl() {\n  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : '/';\n}\n\nfunction getQueryStringParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/"],"sourceRoot":""}